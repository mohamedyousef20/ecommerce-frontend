

#1976d2

auto complet for inputs

phon on register api



export default ProductGrid;
<Typography variant="h4" sx={{ fontWeight: 'bold', mb: 2 }}>
AZARM.
</Typography>

TODO# ANNOUNCEMNTS
    {
        id: 1,
        title: "Big Sale is Here!",
        description: "Don't miss out on discounts up to 70% on all categories.",
        image: "https://via.placeholder.com/150x100", // Replace with actual image URL
    },



6/to do 
HOW TO GET RESPONSE.STATUS CODE -- MAKE THE INPUT ALYWES OPEN 

alert TODO change it to notification



///////////////////////

//////




Arrangement

1-Home Component 


Here are three cohesive color schemes suitable for an e-commerce website:



Replace all alert with notification


                        color: '#374151', for header



// address  



import React, { useEffect, useState } from 'react';
import {
  AppBar,
  Toolbar,
  IconButton,
  Typography,
  InputBase,
  Box,
  Avatar,
  Menu,
  MenuItem,
  Button,
  Badge,
} from '@mui/material';
import {
  Menu as MenuIcon,
  Search as SearchIcon,
  ShoppingCart as ShoppingCartIcon,
  FavoriteBorder as FavoriteBorderIcon,
} from '@mui/icons-material';
import { useNavigate } from 'react-router-dom';
import { alpha, styled } from '@mui/system';
import GetUserCartHook from '../../customHooks/Cart/get-user-cart-hook';
import WarningModal from './WarningModal';

// Styled Search bar
const Search = styled('div')(({ theme }) => ({
  position: 'relative',
  borderRadius: theme.shape.borderRadius,
  backgroundColor: alpha(theme.palette.common.white, 0.15),
  '&:hover': {
    backgroundColor: alpha(theme.palette.common.white, 0.25),
  },
  marginLeft: 0,
  width: '100%',
  [theme.breakpoints.up('sm')]: {
    marginLeft: theme.spacing(2),
    width: 'auto',
  },
}));

const SearchIconWrapper = styled('div')({
  position: 'absolute',
  left: '10px',
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center',
});

const StyledInputBase = styled(InputBase)(({ theme }) => ({
  color: 'inherit',
  paddingLeft: '35px',
  width: '100%',
  '& .MuiInputBase-input': {
    padding: theme.spacing(1),
    transition: theme.transitions.create('width'),
    [theme.breakpoints.up('sm')]: {
      width: '20ch',
    },
  },
}));

const NavbarLogged = () => {
  const [anchorEl, setAnchorEl] = useState(null);
  const [user, setUser] = useState('');
  const [isModalOpen, setIsModalOpen] = useState(false);
  const navigate = useNavigate();
  const [itemsNum] = GetUserCartHook();

  // Handle Logout Confirmation
  const handleConfirmLogout = () => {
    localStorage.removeItem('user');
    localStorage.removeItem('userToken');
    setUser('');
    window.location.href = '/';
  };

  // User Menu Handlers
  const handleMenuClick = (event) => {
    setAnchorEl(event.currentTarget);
  };
  const handleMenuClose = () => {
    setAnchorEl(null);
  };

  const handleNavigate = (path) => {
    navigate(path);
    handleMenuClose();
  };

  useEffect(() => {
    if (localStorage.getItem('user')) {
      setUser(JSON.parse(localStorage.getItem('user')));
    }
  }, []);

  return (
    <AppBar position="sticky" sx={{ zIndex: 1201 }}>
      <Toolbar sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
        {/* Logo */}
        <Typography
          variant="h5"
          sx={{ flexGrow: 1, fontWeight: 'bold', cursor: 'pointer' }}
          onClick={() => handleNavigate('/')}
        >
          AZARM.
        </Typography>

        {/* Search Bar */}
        <Search>
          <SearchIconWrapper>
            <SearchIcon />
          </SearchIconWrapper>
          <StyledInputBase placeholder="Search…" inputProps={{ 'aria-label': 'search' }} />
        </Search>

        {/* Icons Section */}
        <Box sx={{ display: 'flex', alignItems: 'center' }}>
          {/* Wishlist Icon */}
          <IconButton color="inherit" onClick={() => handleNavigate('/wishlist')}>
            <Badge badgeContent={3} color="error"> {/* Replace `3` with dynamic wishlist count */}
              <FavoriteBorderIcon />
            </Badge>
          </IconButton>

          {/* Cart Icon */}
          <IconButton color="inherit" onClick={() => handleNavigate('/cart')}>
            <Badge badgeContent={itemsNum} color="error">
              <ShoppingCartIcon />
            </Badge>
          </IconButton>

          {/* Avatar */}
          <IconButton edge="end" color="inherit" onClick={handleMenuClick}>
            <Avatar src={user.profileImage || ''} />
          </IconButton>

          {/* User Menu */}
          <Menu
            anchorEl={anchorEl}
            open={Boolean(anchorEl)}
            onClose={handleMenuClose}
          >
            <MenuItem onClick={() => handleNavigate('/profile')}>Profile</MenuItem>
            <MenuItem onClick={() => handleNavigate('/orders')}>Orders</MenuItem>
            <MenuItem onClick={handleConfirmLogout}>Logout</MenuItem>
          </Menu>
        </Box>
      </Toolbar>

      {/* Logout Confirmation Modal */}
      <WarningModal
        isOpen={isModalOpen}
        onConfirm={handleConfirmLogout}
        onCancel={() => setIsModalOpen(false)}
        message="Are you sure you want to logout?"
      />
    </AppBar>
  );
};

export default NavbarLogged;
  
wt expired"TODO
  [eslint] 
src/redux/action/cartAction.js
  Line 21:32:  React Hook "useInsertData" cannot be called inside a callback. React Hooks must be called in a React function component or a custom React Hook function  react-hooks/rules-of-hooks


// profile
1️⃣ Primary Color - Royal Blue (#1976D2) → Trust & Professionalism

Great for buttons, navigation bars, and call-to-action elements.
2️⃣ Secondary Color - Warm Orange (#FF5722) → Energy & Excitement

Perfect for highlights, discounts, and promotional banners.
3️⃣ Neutral Color - Light Gray (#F5F5F5) → Clean & Minimalist Look


F5F5F5
FF5722
1976D2

     notTODO           Notification(subcategory.errors[0].msg,'error')




   if (category.status !== 'fail') {
                Notification('Category added successfully', 'success');
            } else {
                Notification('Error adding category', 'error');
            }



git status
git add .
git commit -m "Updated"
git push origin main

