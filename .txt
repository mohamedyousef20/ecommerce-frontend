
TODO 
##########################

3-check product and brand and announcement
3- in useEffect change res.data in dependency of array 

7- profile image in nav bar 
- push 15 item for all modal in you data base after upload it to server

9-if update order payment to card navigate to payment page

==========================
every notification must be like the login page
==========================
##########################



#1976d2

auto complet for inputs




export default ProductGrid;
<Typography variant="h4" sx={{ fontWeight: 'bold', mb: 2 }}>
AZARM.
</Typography>





6/to do 
HOW TO GET RESPONSE.STATUS CODE -- MAKE THE INPUT ALYWES OPEN 

alert TODO change it to notification



///////////////////////

//////




Arrangement

1-Home Component 


Here are three cohesive color schemes suitable for an e-commerce website:



Replace all alert with notification


                        color: '#374151', for header



// address  



import React, { useEffect, useState } from 'react';
import {
  AppBar,
  Toolbar,
  IconButton,
  Typography,
  InputBase,
  Box,
  Avatar,
  Menu,
  MenuItem,
  Button,
  Badge,
} from '@mui/material';
import {
  Menu as MenuIcon,
  Search as SearchIcon,
  ShoppingCart as ShoppingCartIcon,
  FavoriteBorder as FavoriteBorderIcon,
} from '@mui/icons-material';
import { useNavigate } from 'react-router-dom';
import { alpha, styled } from '@mui/system';
import GetUserCartHook from '../../customHooks/Cart/get-user-cart-hook';
import WarningModal from './WarningModal';

// Styled Search bar
const Search = styled('div')(({ theme }) => ({
  position: 'relative',
  borderRadius: theme.shape.borderRadius,
  backgroundColor: alpha(theme.palette.common.white, 0.15),
  '&:hover': {
    backgroundColor: alpha(theme.palette.common.white, 0.25),
  },
  marginLeft: 0,
  width: '100%',
  [theme.breakpoints.up('sm')]: {
    marginLeft: theme.spacing(2),
    width: 'auto',
  },
}));

const SearchIconWrapper = styled('div')({
  position: 'absolute',
  left: '10px',
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center',
});

const StyledInputBase = styled(InputBase)(({ theme }) => ({
  color: 'inherit',
  paddingLeft: '35px',
  width: '100%',
  '& .MuiInputBase-input': {
    padding: theme.spacing(1),
    transition: theme.transitions.create('width'),
    [theme.breakpoints.up('sm')]: {
      width: '20ch',
    },
  },
}));

const NavbarLogged = () => {
  const [anchorEl, setAnchorEl] = useState(null);
  const [user, setUser] = useState('');
  const [isModalOpen, setIsModalOpen] = useState(false);
  const navigate = useNavigate();
  const [itemsNum] = GetUserCartHook();

  // Handle Logout Confirmation
  const handleConfirmLogout = () => {
    localStorage.removeItem('user');
    localStorage.removeItem('userToken');
    setUser('');
    window.location.href = '/';
  };

  // User Menu Handlers
  const handleMenuClick = (event) => {
    setAnchorEl(event.currentTarget);
  };
  const handleMenuClose = () => {
    setAnchorEl(null);
  };

  const handleNavigate = (path) => {
    navigate(path);
    handleMenuClose();
  };

  useEffect(() => {
    if (localStorage.getItem('user')) {
      setUser(JSON.parse(localStorage.getItem('user')));
    }
  }, []);

  return (
    <AppBar position="sticky" sx={{ zIndex: 1201 }}>
      <Toolbar sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
        {/* Logo */}
        <Typography
          variant="h5"
          sx={{ flexGrow: 1, fontWeight: 'bold', cursor: 'pointer' }}
          onClick={() => handleNavigate('/')}
        >
          AZARM.
        </Typography>

        {/* Search Bar */}
        <Search>
          <SearchIconWrapper>
            <SearchIcon />
          </SearchIconWrapper>
          <StyledInputBase placeholder="Search…" inputProps={{ 'aria-label': 'search' }} />
        </Search>

        {/* Icons Section */}
        <Box sx={{ display: 'flex', alignItems: 'center' }}>
          {/* Wishlist Icon */}
          <IconButton color="inherit" onClick={() => handleNavigate('/wishlist')}>
            <Badge badgeContent={3} color="error"> {/* Replace `3` with dynamic wishlist count */}
              <FavoriteBorderIcon />
            </Badge>
          </IconButton>

          {/* Cart Icon */}
          <IconButton color="inherit" onClick={() => handleNavigate('/cart')}>
            <Badge badgeContent={itemsNum} color="error">
              <ShoppingCartIcon />
            </Badge>
          </IconButton>

          {/* Avatar */}
          <IconButton edge="end" color="inherit" onClick={handleMenuClick}>
            <Avatar src={user.profileImage || ''} />
          </IconButton>

          {/* User Menu */}
          <Menu
            anchorEl={anchorEl}
            open={Boolean(anchorEl)}
            onClose={handleMenuClose}
          >
            <MenuItem onClick={() => handleNavigate('/profile')}>Profile</MenuItem>
            <MenuItem onClick={() => handleNavigate('/orders')}>Orders</MenuItem>
            <MenuItem onClick={handleConfirmLogout}>Logout</MenuItem>
          </Menu>
        </Box>
      </Toolbar>

      {/* Logout Confirmation Modal */}
      <WarningModal
        isOpen={isModalOpen}
        onConfirm={handleConfirmLogout}
        onCancel={() => setIsModalOpen(false)}
        message="Are you sure you want to logout?"
      />
    </AppBar>
  );
};

export default NavbarLogged;
  
wt expired"TODO
  [eslint] 
src/redux/action/cartAction.js
  Line 21:32:  React Hook "useInsertData" cannot be called inside a callback. React Hooks must be called in a React function component or a custom React Hook function  react-hooks/rules-of-hooks


// profile
1️⃣ Primary Color - Royal Blue (#1976D2) → Trust & Professionalism

Great for buttons, navigation bars, and call-to-action elements.
2️⃣ Secondary Color - Warm Orange (#FF5722) → Energy & Excitement

Perfect for highlights, discounts, and promotional banners.
3️⃣ Neutral Color - Light Gray (#F5F5F5) → Clean & Minimalist Look


F5F5F5
FF5722
1976D2

     notTODO           Notification(subcategory.errors[0].msg,'error')




   if (category.status !== 'fail') {
                Notification('Category added successfully', 'success');
            } else {
                Notification('Error adding category', 'error');
            }



git status
git add .
git commit -m "Updated"
git push origin main

<TextField
  fullWidth
  label="Label"
  variant="outlined"
  sx={{
    mb: 3,
    '& .MuiInputBase-root': {
      borderRadius: 2,
      backgroundColor: '#F5F5F5', // Neutral Color
    },
    '& .Mui-focused .MuiOutlinedInput-notchedOutline': {
      borderColor: '#1976D2', // Primary Color
    },
  }}
/>

<Button
  variant="contained"
  sx={{
    px: 4,
    py: 1.5,
    mt: 3,
    backgroundColor: "#1976D2", // Primary Color
    color: "white",
    fontWeight: '600',
    borderRadius: 2,
    "&:hover": {
      backgroundColor: "#FF5722", // Secondary Color
    }
  }}
>
  Submit
</Button>


import React from 'react'
import { Box, Paper, Typography } from '@mui/material';
import AdminSideBar from '../../../Components/Admin/AdminSideBar';

const AdminListPage = () => {
  return (
    <Box sx={{ 
      backgroundColor: '#F5F5F5', // Neutral Color
      minHeight: '100vh'
    }}>
      <Box sx={{ 
        display: 'flex',
        flexDirection: 'column'
      }}>
        <Box sx={{ 
          display: 'flex',
          flex: 1,
        }}>
          {/* Sidebar */}
          <Box sx={{ 
            width: 240,
            backgroundColor: '#1976D2', // Primary Color
            color: 'white',
            minHeight: 'calc(100vh - 64px)',
            position: 'fixed',
            left: 0,
            top: 64,
            zIndex: 1
          }}>
            <AdminSideBar />
          </Box>

          {/* Main content */}
          <Box sx={{ 
            flex: 1,
            ml: '240px',
            p: 3
          }}>
            <Paper sx={{ 
              p: 3,
              backgroundColor: 'white',
              borderRadius: 2,
              boxShadow: '0px 4px 16px rgba(43, 52, 69, 0.1)'
            }}>
              <Typography 
                variant="h5" 
                fontWeight={600} 
                color="#1976D2"
                mb={3}
              >
                Page Title
              </Typography>
              {/* Your list component here */}
            </Paper>
          </Box>
        </Box>
      </Box>
    </Box>
  );
};

export default AdminListPage;




import React, { useEffect, useState } from 'react';
import {
  AppBar, Toolbar, IconButton, Typography, InputBase, Box, Avatar,
  Menu, MenuItem, Button, Badge
} from '@mui/material';
import {
  Menu as MenuIcon, Search as SearchIcon, ShoppingCart as ShoppingCartIcon,
  FavoriteRounded
} from '@mui/icons-material';
import { alpha, styled } from '@mui/system';
import { useNavigate } from 'react-router-dom';
import GetUserCartHook from '../../customHooks/Cart/get-user-cart-hook';
import WarningModal from './WarningModal';
import GetProductSearchHook from '../../customHooks/Product/GetProductSearchHook';
import Notification from '../../customHooks/useNotification';
import GetAllWishListProduct from '../../customHooks/Wishlist/GetAllWishListProduct';

const primaryColor = '#2563eb';
const secondaryColor = '#1e40af';
const textColor = '#ffffff';

const Search = styled('div')({
  position: 'relative',
  borderRadius: '8px',
  backgroundColor: alpha('#f8fafc', 0.15),
  '&:hover': {
    backgroundColor: alpha('#f8fafc', 0.25),
    transition: 'all 0.3s ease'
  },
  marginLeft: 0,
  width: '100%',
  display: 'flex',
  alignItems: 'center',
  padding: '8px 16px',
  color: textColor,
  boxShadow: '0 1px 2px rgba(0,0,0,0.1)'
});

const NavbarLogged = () => {
  const [anchorEl, setAnchorEl] = useState(null);
  const [user, setUser] = useState('');
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);
  const navigate = useNavigate();
  const [itemsNum] = GetUserCartHook();
  const [prodInWishlist] = GetAllWishListProduct();
  
  useEffect(() => {
    if (localStorage.getItem('user')) {
      setUser(JSON.parse(localStorage.getItem('user')));
    }
  }, []);
  
  const handleNavigate = (path) => {
    navigate(path);
    setMobileMenuOpen(false);
  };

  return (
    <AppBar position="sticky" sx={{ backgroundColor: primaryColor, boxShadow: '0 2px 4px rgba(0,0,0,0.1)' }}>
      <Toolbar sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 1 }}>
        {/* Top Section - Logo */}
        <Box sx={{ width: '100%', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
          <Typography
            variant="h5"
            sx={{ fontWeight: 'bold', cursor: 'pointer', color: textColor }}
            onClick={() => handleNavigate('/')}
          >
            AZARM.
          </Typography>
          {/* Middle Section - Cart, Wishlist, Avatar */}
          <Box sx={{ display: 'flex', gap: 2, alignItems: 'center' }}>
            <IconButton color="inherit" onClick={() => handleNavigate('/wishlist')}>
              <Badge badgeContent={prodInWishlist?.numberOfLikedProduct || '0'} color="error">
                <FavoriteRounded sx={{ color: textColor }} />
              </Badge>
            </IconButton>
            <IconButton color="inherit" onClick={() => handleNavigate('/cart')}>
              <Badge badgeContent={itemsNum || '0'} color="error">
                <ShoppingCartIcon sx={{ color: textColor }} />
              </Badge>
            </IconButton>
            <IconButton onClick={() => setAnchorEl(true)}>
              <Avatar src={user?.profileImage || '/default-avatar.png'} alt={user?.name || 'User'} sx={{ width: 32, height: 32 }} />
            </IconButton>
          </Box>
        </Box>

        {/* Search Bar */}
        <Search>
          <SearchIcon sx={{ color: textColor, marginRight: 1 }} />
          <InputBase placeholder="Search products..." inputProps={{ 'aria-label': 'search' }} />
        </Search>

        {/* Bottom Section - Navigation Menu */}
        <Box sx={{ display: 'flex', gap: 2, justifyContent: 'center', width: '100%' }}>
          <Button sx={{ color: textColor }} onClick={() => handleNavigate('/')}>Home</Button>
          <Button sx={{ color: textColor }} onClick={() => handleNavigate('/product')}>Products</Button>
          <Button sx={{ color: textColor }} onClick={() => handleNavigate('/brand')}>Brands</Button>
          <Button sx={{ color: textColor }} onClick={() => handleNavigate('/category')}>Categories</Button>
        </Box>
      </Toolbar>
    </AppBar>
  );
};

export default NavbarLogged;
mobile 